diff '--exclude=.git' -urN a/Makefile.am b/Makefile.am
--- a/Makefile.am	1969-12-31 19:00:00.000000000 -0500
+++ b/Makefile.am	2018-05-08 19:39:05.739140984 -0400
@@ -0,0 +1,50 @@
+ACLOCAL_AMFLAGS = -I m4 ${ACLOCAL_FLAGS}
+
+SUBDIRS = 						\
+	gusb						\
+	tools						\
+	docs
+
+EXTRA_DIST =						\
+	COPYING						\
+	MAINTAINERS					\
+	AUTHORS						\
+	INSTALL						\
+	README						\
+	NEWS						\
+	autogen.sh					\
+	config.h
+
+MAINTAINERCLEANFILES =					\
+	ChangeLog					\
+	INSTALL						\
+	aclocal.m4					\
+	build-aux/					\
+	config.h.in					\
+	gtk-doc.make
+
+DISTCHECK_CONFIGURE_FLAGS = 				\
+	--enable-gtk-doc
+
+distclean-local:
+	if test $(srdcir) = .; then :; else \
+		rm -f ChangeLog; \
+	fi
+
+ChangeLog:
+	@echo Creating $@
+	@if test -d "$(srcdir)/.git"; then \
+	  (GIT_DIR=$(top_srcdir)/.git ./missing --run git log e197d80c8937c622f21f569457d1bbd05746d951.. --stat -M -C --name-status  --date=short --no-color) | fmt --split-only > $@.tmp \
+	  && mv -f $@.tmp $@ \
+	  || ($(RM) $@.tmp; \
+	      echo Failed to generate ChangeLog, your ChangeLog may be outdated >&2; \
+	      (test -f $@ || echo git-log is required to generate this file >> $@)); \
+	else \
+	  test -f $@ || \
+	  (echo A git checkout and git-log is required to generate ChangeLog >&2 && \
+	  echo A git checkout and git-log is required to generate this file >> $@); \
+	fi
+
+.PHONY: ChangeLog
+
+-include $(top_srcdir)/git.mk
diff '--exclude=.git' -urN a/autogen.sh b/autogen.sh
--- a/autogen.sh	1969-12-31 19:00:00.000000000 -0500
+++ b/autogen.sh	2018-05-08 19:39:05.739140984 -0400
@@ -0,0 +1,34 @@
+#!/bin/sh
+# Copyright (C) 2010-2011 Richard Hughes <richard@hughsie.com>
+#
+# Run this to generate all the initial makefiles, etc.
+#
+# Licensed under the GNU General Public License Version 2
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+
+test -n "$srcdir" || srcdir=`dirname "$0"`
+test -n "$srcdir" || srcdir=.
+
+olddir=`pwd`
+cd "$srcdir"
+
+GTKDOCIZE=`which gtkdocize`
+if test -z $GTKDOCIZE; then
+        echo "*** No GTK-Doc found, please install it ***"
+        exit 1
+fi
+
+AUTORECONF=`which autoreconf`
+if test -z $AUTORECONF; then
+        echo "*** No autoreconf found, please install it ***"
+        exit 1
+fi
+
+gtkdocize || exit $?
+AUTOPOINT='intltoolize --automake --copy' autoreconf --force --install --verbose
+
+cd "$olddir"
+test -n "$NOCONFIGURE" || "$srcdir/configure" "$@"
diff '--exclude=.git' -urN a/configure.ac b/configure.ac
--- a/configure.ac	1969-12-31 19:00:00.000000000 -0500
+++ b/configure.ac	2018-05-08 19:39:05.739140984 -0400
@@ -0,0 +1,146 @@
+# Copyright (C) 2010 Richard Hughes <richard@hughsie.com>
+AC_PREREQ(2.63)
+
+m4_define([gusb_major_version], [0])
+m4_define([gusb_minor_version], [2])
+m4_define([gusb_micro_version], [12])
+m4_define([gusb_version],
+          [gusb_major_version.gusb_minor_version.gusb_micro_version])
+
+AC_INIT([libgusb],[gusb_version],[http://www.hughsie.com])
+AC_CONFIG_SRCDIR(gusb)
+AC_CONFIG_HEADERS([config.h])
+AC_CONFIG_MACRO_DIR([m4])
+AC_CONFIG_AUX_DIR([build-aux])
+
+AM_INIT_AUTOMAKE([1.11 no-dist-gzip dist-xz tar-ustar -Wno-portability])
+
+AM_SILENT_RULES([yes])
+
+# GObject Introspection
+GOBJECT_INTROSPECTION_CHECK([1.29])
+
+# Vala bindings
+VAPIGEN_CHECK([0.16])
+
+# use this in cd-version.h
+G_USB_MAJOR_VERSION=gusb_major_version
+G_USB_MINOR_VERSION=gusb_minor_version
+G_USB_MICRO_VERSION=gusb_micro_version
+AC_SUBST(VERSION)
+AC_SUBST(G_USB_MAJOR_VERSION)
+AC_SUBST(G_USB_MINOR_VERSION)
+AC_SUBST(G_USB_MICRO_VERSION)
+
+# libtool versioning - this applies to libgusb
+#
+# See http://sources.redhat.com/autobook/autobook/autobook_91.html#SEC91 for details
+#
+# increment;
+# CURRENT	If the API or ABI interface has changed (reset REVISION to 0)
+# REVISION	If the API and ABI remains the same, but bugs are fixed.
+# AGE		Don't use.
+LT_CURRENT=2
+LT_REVISION=10
+LT_AGE=0
+AC_SUBST(LT_CURRENT)
+AC_SUBST(LT_REVISION)
+AC_SUBST(LT_AGE)
+
+# Check for programs
+AC_PROG_CC
+AM_PROG_CC_C_O
+AC_PROG_INSTALL
+AC_PATH_PROG(XSLTPROC, xsltproc)
+
+# Initialize libtool
+LT_PREREQ([2.2])
+LT_INIT
+
+# set up gtk-doc
+GTK_DOC_CHECK(1.9)
+
+dnl ---------------------------------------------------------------------------
+dnl - Extra verbose warning switches
+dnl ---------------------------------------------------------------------------
+
+if test "$GCC" = "yes"; then
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wall"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wcast-align -Wno-uninitialized"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wmissing-declarations"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wpointer-arith"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wcast-align"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wwrite-strings"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Winit-self"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wreturn-type"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wformat-nonliteral"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wformat-security"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wmissing-include-dirs"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wmissing-format-attribute"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wclobbered"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wempty-body"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wignored-qualifiers"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wsign-compare"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wtype-limits"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wuninitialized"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Waggregate-return"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wdeclaration-after-statement"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wshadow"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wno-strict-aliasing"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Winline"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Wmissing-parameter-type"
+	WARNINGFLAGS_C="$WARNINGFLAGS_C -Woverride-init"
+else
+	WARNINGFLAGS_C=""
+fi
+AC_SUBST(WARNINGFLAGS_C)
+
+dnl ---------------------------------------------------------------------------
+dnl - Check library dependencies
+dnl ---------------------------------------------------------------------------
+PKG_CHECK_MODULES(GLIB, glib-2.0 >= 2.44.0 gobject-2.0 gthread-2.0 gio-2.0)
+PKG_CHECK_MODULES(USB, libusb-1.0 >= 1.0.19)
+
+dnl ---------------------------------------------------------------------------
+dnl - Build self tests
+dnl ---------------------------------------------------------------------------
+AC_ARG_ENABLE(tests, AS_HELP_STRING([--enable-tests],[enable unit test code]),
+	      enable_tests=$enableval,enable_tests=yes)
+AM_CONDITIONAL(GUSB_BUILD_TESTS, test x$enable_tests = xyes)
+
+dnl ---------------------------------------------------------------------------
+dnl - Path to usb.ids file
+dnl ---------------------------------------------------------------------------
+AC_ARG_WITH(usb-ids, AS_HELP_STRING([--with-usb-ids=PATH],
+	   [path to usb.ids file @<:@default=/usr/share/hwdata/usb.ids@:>@]),
+	    with_usb_ids=$withval,with_usb_ids=/usr/share/hwdata/usb.ids)
+AC_DEFINE_UNQUOTED(USB_IDS, ["$with_usb_ids"], [Path to usb.ids file])
+
+dnl ---------------------------------------------------------------------------
+dnl - Makefiles, etc.
+dnl ---------------------------------------------------------------------------
+AC_CONFIG_FILES([
+Makefile
+docs/Makefile
+docs/api/Makefile
+docs/api/version.xml
+gusb/gusb-version.h
+gusb/gusb.pc
+gusb/Makefile
+tools/Makefile
+])
+AC_OUTPUT
+
+dnl ==========================================================================
+echo "
+                    libgusb $VERSION
+                  ====================
+
+        prefix:                    ${prefix}
+        datadir:                   ${datadir}
+        compiler:                  ${CC}
+        cflags:                    ${CFLAGS}
+        cppflags:                  ${CPPFLAGS}
+        Building unit tests:       ${enable_tests}
+        Path to usb.ids file:      ${with_usb_ids}
+"
diff '--exclude=.git' -urN a/docs/Makefile.am b/docs/Makefile.am
--- a/docs/Makefile.am	1969-12-31 19:00:00.000000000 -0500
+++ b/docs/Makefile.am	2018-05-08 19:39:05.739140984 -0400
@@ -0,0 +1,5 @@
+SUBDIRS = 						\
+	api
+
+
+-include $(top_srcdir)/git.mk
diff '--exclude=.git' -urN a/docs/api/Makefile.am b/docs/api/Makefile.am
--- a/docs/api/Makefile.am	1969-12-31 19:00:00.000000000 -0500
+++ b/docs/api/Makefile.am	2018-05-08 19:39:05.740140979 -0400
@@ -0,0 +1,94 @@
+## Process this file with automake to produce Makefile.in
+
+NULL =
+
+# We require automake 1.6 at least.
+AUTOMAKE_OPTIONS = 1.6
+
+# The name of the module, e.g. 'glib'.
+DOC_MODULE=gusb
+
+# The top-level SGML file.
+DOC_MAIN_SGML_FILE=$(DOC_MODULE)-docs.sgml
+
+# The directory containing the source code. Relative to $(srcdir).
+# gtk-doc will search all .c & .h files beneath here for inline comments
+# documenting the functions and macros.
+DOC_SOURCE_DIR=$(top_srcdir)/gusb $(top_builddir)/gusb
+
+# Extra options to pass to gtkdoc-scangobj. Not normally needed.
+SCANGOBJ_OPTIONS=
+
+# Extra options to supply to gtkdoc-scan.
+SCAN_OPTIONS=
+
+# Extra options to supply to gtkdoc-mkdb.
+MKDB_OPTIONS=--sgml-mode --output-format=xml
+
+# Extra options to supply to gtkdoc-mktmpl
+MKTMPL_OPTIONS=
+
+# Extra options to supply to gtkdoc-fixref. Not normally needed.
+FIXXREF_OPTIONS=
+
+# Used for dependencies. The docs will be rebuilt if any of these change.
+HFILE_GLOB=$(top_srcdir)/gusb/gusb-*.h
+CFILE_GLOB=$(top_srcdir)/gusb/gusb-*.c
+
+# Header files to ignore when scanning.
+IGNORE_HFILES =						\
+	config.h					\
+	gusb-marshal.h					\
+	$(NULL)
+
+# Images to copy into HTML directory.
+#HTML_IMAGES =						\
+#	spec/pk-transactions-success.png		\
+#	spec/pk-transactions-trusted.png
+
+# Extra SGML files that are included by $(DOC_MAIN_SGML_FILE).
+content_files =						\
+	version.xml					\
+	gusb-introduction.xml				\
+	gusb-faq.xml					\
+	$(NULL)
+
+# SGML files where gtk-doc abbrevations (#GtkWidget) are expanded
+# These files must be listed here *and* in content_files
+expand_content_files=
+
+# CFLAGS and LDFLAGS for compiling gtkdoc-scangobj with your library.
+# Only needed if you are using gtkdoc-scangobj to dynamically query widget
+# signals and properties.
+AM_CPPFLAGS =						\
+	$(GLIB_CFLAGS)					\
+	-I$(top_builddir)/gusb				\
+	-I$(top_srcdir)/gusb				\
+	$(NULL)
+
+GUSB_LIBS = $(top_builddir)/gusb/libgusb.la
+
+GTKDOC_LIBS =						\
+	$(GLIB_LIBS)					\
+	$(GUSB_LIBS)					\
+	$(USB_LIBS)					\
+	$(NULL)
+
+# This includes the standard gtk-doc make rules, copied by gtkdocize.
+include $(top_srcdir)/gtk-doc.make
+
+CLEANFILES +=						\
+	*.txt						\
+	*.types						\
+	*.args						\
+	*.hierarchy					\
+	*.interfaces					\
+	*.prerequisites					\
+	*.signals					\
+	*.stamp						\
+	tmpl
+
+# Other files to distribute
+EXTRA_DIST += version.xml.in
+
+-include $(top_srcdir)/git.mk
diff '--exclude=.git' -urN a/docs/api/clean.sh b/docs/api/clean.sh
--- a/docs/api/clean.sh	1969-12-31 19:00:00.000000000 -0500
+++ b/docs/api/clean.sh	2018-05-08 19:39:05.740140979 -0400
@@ -0,0 +1,7 @@
+rm -f *.txt
+rm -f *-scan.*
+rm -f *.types
+rm -f html/*
+rm -f tmpl/*
+rm -f xml/*
+
diff '--exclude=.git' -urN a/git.mk b/git.mk
--- a/git.mk	1969-12-31 19:00:00.000000000 -0500
+++ b/git.mk	2018-05-08 19:39:05.742140969 -0400
@@ -0,0 +1,200 @@
+# git.mk
+#
+# Copyright 2009, Red Hat, Inc.
+# Written by Behdad Esfahbod
+#
+# Copying and distribution of this file, with or without modification,
+# are permitted in any medium without royalty provided the copyright
+# notice and this notice are preserved.
+#
+# The canonical source for this file is pango/git.mk, or whereever the
+# header of pango/git.mk suggests in the future.
+#
+# To use in your project, import this file in your git repo's toplevel,
+# then do "make -f git.mk".  This modifies all Makefile.am files in
+# your project to include git.mk.
+#
+# This enables automatic .gitignore generation.  If you need to ignore
+# more files, add them to the GITIGNOREFILES variable in your Makefile.am.
+# But think twice before doing that.  If a file has to be in .gitignore,
+# chances are very high that it's a generated file and should be in one
+# of MOSTLYCLEANFILES, CLEANFILES, DISTCLEANFILES, or MAINTAINERCLEANFILES.
+#
+# The only case that you need to manually add a file to GITIGNOREFILES is
+# when remove files in one of mostlyclean-local, clean-local, distclean-local,
+# or maintainer-clean-local.
+#
+# Note that for files like editor backup, etc, there are better places to
+# ignore them.  See "man gitignore".
+#
+# If "make maintainer-clean" removes the files but they are not recognized
+# by this script (that is, if "git status" shows untracked files still), send
+# me the output of "git status" as well as your Makefile.am and Makefile for
+# the directories involved.
+#
+# For a list of toplevel files that should be in MAINTAINERCLEANFILES, see
+# pango/Makefile.am.
+#
+# Don't EXTRA_DIST this file.  It is supposed to only live in git clones,
+# not tarballs.  It serves no useful purpose in tarballs and clutters the
+# build dir.
+#
+# This file knows how to handle autoconf, automake, libtool, gtk-doc,
+# gnome-doc-utils, mallard, intltool, gsettings.
+#
+#
+# KNOWN ISSUES:
+#
+# - Recursive configure doesn't work as $(top_srcdir)/git.mk inside the
+#   submodule doesn't find us.  If you have configure.{in,ac} files in
+#   subdirs, add a proxy git.mk file in those dirs that simply does:
+#   "include $(top_srcdir)/../git.mk".  Add more ..'s to your taste.
+#   And add those files to git.  See vte/gnome-pty-helper/git.mk for
+#   example.
+#
+# ChangeLog
+#
+# - 2010-12-06 Add support for Mallard docs
+# - 2010-12-06 Start this change log
+
+git-all: git-mk-install
+
+git-mk-install:
+	@echo Installing git makefile
+	@any_failed=; find $(top_srcdir) -name Makefile.am | while read x; do \
+		if grep 'include .*/git.mk' $$x >/dev/null; then \
+			echo $$x already includes git.mk; \
+		else \
+			failed=; \
+			echo "Updating $$x"; \
+			{ cat $$x; \
+			  echo ''; \
+			  echo '-include $$(top_srcdir)/git.mk'; \
+			} > $$x.tmp || failed=1; \
+			if test x$$failed = x; then \
+				mv $$x.tmp $$x || failed=1; \
+			fi; \
+			if test x$$failed = x; then : else \
+				echo Failed updating $$x; >&2 \
+				any_failed=1; \
+			fi; \
+	fi; done; test -z "$$any_failed"
+
+.PHONY: git-all git-mk-install
+
+
+### .gitignore generation
+
+$(srcdir)/.gitignore: Makefile.am $(top_srcdir)/git.mk
+	$(AM_V_GEN) \
+	{ \
+		if test "x$(DOC_MODULE)" = x -o "x$(DOC_MAIN_SGML_FILE)" = x; then :; else \
+			for x in \
+				$(DOC_MODULE)-decl-list.txt \
+				$(DOC_MODULE)-decl.txt \
+				tmpl/$(DOC_MODULE)-unused.sgml \
+				"tmpl/*.bak" \
+				xml html \
+			; do echo /$$x; done; \
+		fi; \
+		if test "x$(DOC_MODULE)$(DOC_ID)" = x -o "x$(DOC_LINGUAS)" = x; then :; else \
+			for x in \
+				$(_DOC_C_DOCS) \
+				$(_DOC_LC_DOCS) \
+				$(_DOC_OMF_ALL) \
+				$(_DOC_DSK_ALL) \
+				$(_DOC_HTML_ALL) \
+				$(_DOC_MOFILES) \
+				$(_DOC_POFILES) \
+				$(DOC_H_FILE) \
+				"*/.xml2po.mo" \
+				"*/*.omf.out" \
+			; do echo /$$x; done; \
+		fi; \
+		if test "x$(gsettings_SCHEMAS)" = x; then :; else \
+			for x in \
+				$(gsettings_SCHEMAS:.xml=.valid) \
+				$(gsettings__enum_file) \
+			; do echo /$$x; done; \
+		fi; \
+		if test -f $(srcdir)/po/Makefile.in.in; then \
+			for x in \
+				po/Makefile.in.in \
+				po/Makefile.in \
+				po/Makefile \
+				po/POTFILES \
+				po/stamp-it \
+				po/.intltool-merge-cache \
+				"po/*.gmo" \
+				"po/*.mo" \
+				po/$(GETTEXT_PACKAGE).pot \
+				intltool-extract.in \
+				intltool-merge.in \
+				intltool-update.in \
+			; do echo /$$x; done; \
+		fi; \
+		if test -f $(srcdir)/configure; then \
+			for x in \
+				autom4te.cache \
+				configure \
+				config.h \
+				stamp-h1 \
+				libtool \
+				config.lt \
+			; do echo /$$x; done; \
+		fi; \
+		for x in \
+			.gitignore \
+			$(GITIGNOREFILES) \
+			$(CLEANFILES) \
+			$(PROGRAMS) \
+			$(check_PROGRAMS) \
+			$(EXTRA_PROGRAMS) \
+			$(LTLIBRARIES) \
+			so_locations \
+			.libs _libs \
+			$(MOSTLYCLEANFILES) \
+			"*.$(OBJEXT)" \
+			"*.lo" \
+			$(DISTCLEANFILES) \
+			$(am__CONFIG_DISTCLEAN_FILES) \
+			$(CONFIG_CLEAN_FILES) \
+			TAGS ID GTAGS GRTAGS GSYMS GPATH tags \
+			"*.tab.c" \
+			$(MAINTAINERCLEANFILES) \
+			$(BUILT_SOURCES) \
+			$(DEPDIR) \
+			Makefile \
+			Makefile.in \
+			"*.orig" \
+			"*.rej" \
+			"*.bak" \
+			"*~" \
+			".*.sw[nop]" \
+			".dirstamp" \
+		; do echo /$$x; done; \
+	} | \
+	sed "s@^/`echo "$(srcdir)" | sed 's/\(.\)/[\1]/g'`/@/@" | \
+	sed 's@/[.]/@/@g' | \
+	LC_ALL=C sort | uniq > $@.tmp && \
+	mv $@.tmp $@;
+
+all: $(srcdir)/.gitignore gitignore-recurse-maybe
+gitignore-recurse-maybe:
+	@if test "x$(SUBDIRS)" = "x$(DIST_SUBDIRS)"; then :; else \
+		$(MAKE) $(AM_MAKEFLAGS) gitignore-recurse; \
+	fi;
+gitignore-recurse:
+	@for subdir in $(DIST_SUBDIRS); do \
+	  case " $(SUBDIRS) " in \
+	    *" $$subdir "*) :;; \
+	    *) test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) .gitignore gitignore-recurse || echo "Skipping $$subdir");; \
+	  esac; \
+	done
+gitignore: $(srcdir)/.gitignore gitignore-recurse
+
+maintainer-clean: gitignore-clean
+gitignore-clean:
+	-rm -f $(srcdir)/.gitignore
+
+.PHONY: gitignore-clean gitignore gitignore-recurse gitignore-recurse-maybe
diff '--exclude=.git' -urN a/gusb/Makefile.am b/gusb/Makefile.am
--- a/gusb/Makefile.am	1969-12-31 19:00:00.000000000 -0500
+++ b/gusb/Makefile.am	2018-05-08 19:39:05.742140969 -0400
@@ -0,0 +1,132 @@
+
+AM_CPPFLAGS = \
+	$(GLIB_CFLAGS)						\
+	$(USB_CFLAGS)						\
+	$(GUDEV_CFLAGS)						\
+	-I$(top_srcdir)						\
+	-I$(top_srcdir)/gusb					\
+	-DGUSB_COMPILATION					\
+	-DG_LOG_DOMAIN=\"libgusb\"				\
+	-DTESTDATADIR=\""$(top_srcdir)/data/tests"\"		\
+	-DPACKAGE_DATA_DIR=\""$(datadir)"\"
+
+lib_LTLIBRARIES =						\
+	libgusb.la
+
+libgusb_includedir = $(includedir)/gusb-1
+libgusb_include_HEADERS =					\
+	gusb-private.h						\
+	gusb.h
+
+libgusbbase_includedir = $(libgusb_includedir)/gusb
+libgusbbase_include_HEADERS =					\
+	gusb-autocleanups.h					\
+	gusb-version.h						\
+	gusb-context.h						\
+	gusb-context-private.h					\
+	gusb-device.h						\
+	gusb-device-private.h					\
+	gusb-device-list.h					\
+	gusb-interface.h					\
+	gusb-interface-private.h				\
+	gusb-source.h						\
+	gusb-util.h
+
+libgusb_la_SOURCES =						\
+	gusb-context.c						\
+	gusb-device.c						\
+	gusb-device-list.c					\
+	gusb-interface.c					\
+	gusb-source.c						\
+	gusb-util.c
+
+libgusb_la_LIBADD =						\
+	$(GLIB_LIBS)						\
+	$(USB_LIBS)						\
+	$(GUDEV_LIBS)
+
+libgusb_la_LDFLAGS =						\
+	-version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE)	\
+	-export-dynamic						\
+	-no-undefined						\
+	-Wl,--version-script=$(top_srcdir)/gusb/libgusb.ver
+
+libgusb_la_CFLAGS =						\
+	$(WARNINGFLAGS_C)
+
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = gusb.pc
+
+if GUSB_BUILD_TESTS
+check_PROGRAMS =						\
+	gusb-self-test
+
+gusb_self_test_SOURCES =					\
+	$(libgusb_la_SOURCES)					\
+	gusb-self-test.c
+
+gusb_self_test_LDADD =						\
+	$(GLIB_LIBS)						\
+	$(USB_LIBS)
+
+gusb_self_test_CFLAGS = $(AM_CFLAGS) $(WARNINGFLAGS_C)
+
+TESTS = gusb-self-test
+endif
+
+if HAVE_INTROSPECTION
+include $(INTROSPECTION_MAKEFILE)
+
+INTROSPECTION_GIRS = GUsb-1.0.gir
+INTROSPECTION_SCANNER_ENV = CC="$(CC)"
+
+GUsb-1.0.gir: libgusb.la
+
+GUsb_1_0_gir_PACKAGES = glib-2.0 gobject-2.0 libusb-1.0
+GUsb_1_0_gir_EXPORT_PACKAGES = gusb
+GUsb_1_0_gir_INCLUDES = GLib-2.0 GObject-2.0 Gio-2.0
+GUsb_1_0_gir_LIBS = libgusb.la
+GUsb_1_0_gir_CFLAGS = -I$(top_srcdir) -I$(top_builddir) -DGUSB_COMPILATION
+GUsb_1_0_gir_FILES = $(libgusb_la_SOURCES) $(libgusbbase_include_HEADERS)
+GUsb_1_0_gir_SCANNERFLAGS = --c-include "gusb.h"
+
+girdir = $(datadir)/gir-1.0
+gir_DATA = $(INTROSPECTION_GIRS)
+
+typelibsdir = $(libdir)/girepository-1.0
+typelibs_DATA = $(INTROSPECTION_GIRS:.gir=.typelib)
+endif
+
+if ENABLE_VAPIGEN
+include $(VAPIGEN_MAKEFILE)
+
+gusb.vapi: GUsb-1.0.gir
+
+VAPIGEN_VAPIS = gusb.vapi
+
+gusb_vapi_DEPS = gio-2.0
+gusb_vapi_METADATADIRS = $(srcdir)
+gusb_vapi_FILES = GUsb-1.0.gir
+
+vapidir = $(datadir)/vala/vapi
+vapi_DATA = $(VAPIGEN_VAPIS)
+endif
+
+EXTRA_DIST =							\
+	libgusb.ver						\
+	gusb-version.h.in					\
+	gusb.pc.in
+
+CLEANFILES = $(BUILT_SOURCES)
+
+if HAVE_INTROSPECTION
+CLEANFILES += $(INTROSPECTION_GIRS) $(INTROSPECTION_GIRS:.gir=.typelib)
+endif
+if ENABLE_VAPIGEN
+CLEANFILES += $(VAPIGEN_VAPIS)
+endif
+
+clean-local:
+	rm -f *~
+
+-include $(top_srcdir)/git.mk
diff '--exclude=.git' -urN a/gusb/gusb.pc.in b/gusb/gusb.pc.in
--- a/gusb/gusb.pc.in	1969-12-31 19:00:00.000000000 -0500
+++ b/gusb/gusb.pc.in	2018-05-08 19:39:05.742140969 -0400
@@ -0,0 +1,12 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: gusb
+Description: GUsb is a GLib binding for libusb1
+Version: @VERSION@
+Requires.private: gthread-2.0
+Requires: glib-2.0, gobject-2.0, libusb-1.0
+Libs: -L${libdir} -lgusb
+Cflags: -I${includedir}/gusb-1
diff '--exclude=.git' -urN a/m4/.gitignore b/m4/.gitignore
--- a/m4/.gitignore	1969-12-31 19:00:00.000000000 -0500
+++ b/m4/.gitignore	2018-05-08 19:39:05.742140969 -0400
@@ -0,0 +1 @@
+*.m4
diff '--exclude=.git' -urN a/m4/vapigen.m4 b/m4/vapigen.m4
--- a/m4/vapigen.m4	1969-12-31 19:00:00.000000000 -0500
+++ b/m4/vapigen.m4	2018-05-08 19:39:05.742140969 -0400
@@ -0,0 +1,88 @@
+dnl vala.m4
+dnl
+dnl Copyright 2012 Evan Nemerson
+dnl
+dnl This library is free software; you can redistribute it and/or
+dnl modify it under the terms of the GNU Lesser General Public
+dnl License as published by the Free Software Foundation; either
+dnl version 2.1 of the License, or (at your option) any later version.
+dnl
+dnl This library is distributed in the hope that it will be useful,
+dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
+dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+dnl Lesser General Public License for more details.
+dnl
+dnl You should have received a copy of the GNU Lesser General Public
+dnl License along with this library; if not, write to the Free Software
+dnl Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
+
+# VAPIGEN_CHECK([VERSION], [API_VERSION], [FOUND-INTROSPECTION])
+# --------------------------------------
+# Check that vapigen existence and version
+#
+# See http://live.gnome.org/Vala/UpstreamGuide for detailed documentation
+AC_DEFUN([VAPIGEN_CHECK],
+[
+  AC_BEFORE([GOBJECT_INTROSPECTION_CHECK],[$0])
+  AC_BEFORE([GOBJECT_INTROSPECTION_REQUIRE],[$0])
+
+  AC_ARG_ENABLE([vala],
+    AS_HELP_STRING([--enable-vala[=@<:@no/auto/yes@:>@]],
+      [build Vala bindings [[default=auto]]]),,
+      [enable_vala=auto])
+
+  AS_CASE([$enable_vala], [no], [],
+      [yes], [
+        AS_IF([test "x$3" != "xyes" -a "x$found_introspection" != "xyes"], [
+            AC_MSG_ERROR([Vala bindings require GObject Introspection])
+          ])
+      ], [auto], [
+        AS_IF([test "x$3" != "xyes" -a "x$found_introspection" != "xyes"], [
+            enable_vala=no
+          ])
+      ], [
+        AC_MSG_ERROR([Invalid argument passed to --enable-vala, should be one of @<:@no/auto/yes@:>@])
+      ])
+
+  AS_IF([test "x$2" = "x"], [
+      vapigen_pkg_name=vapigen
+    ], [
+      vapigen_pkg_name=vapigen-$2
+    ])
+  AS_IF([test "x$1" = "x"], [
+      vapigen_pkg="$vapigen_pkg_name"
+    ], [
+      vapigen_pkg="$vapigen_pkg_name >= $1"
+    ])
+
+  PKG_PROG_PKG_CONFIG
+
+  PKG_CHECK_EXISTS([$vapigen_pkg], [
+      AS_IF([test "$enable_vala" = "auto"], [
+          enable_vala=yes
+        ])
+    ], [
+      AS_CASE([$enable_vala], [yes], [
+          AC_MSG_ERROR([$vapigen_pkg not found])
+        ], [auto], [
+          enable_vala=no
+        ])
+    ])
+
+  AS_CASE([$enable_vala],
+    [yes], [
+      VAPIGEN=`$PKG_CONFIG --variable=vapigen vapigen`
+      VAPIGEN_MAKEFILE=`$PKG_CONFIG --variable=datadir vapigen`/vala/Makefile.vapigen
+      AS_IF([test "x$2" = "x"], [
+          VAPIGEN_VAPIDIR=`$PKG_CONFIG --variable=vapidir vapigen`
+        ], [
+          VAPIGEN_VAPIDIR=`$PKG_CONFIG --variable=vapidir_versioned vapigen`
+        ])
+    ])
+
+  AC_SUBST([VAPIGEN])
+  AC_SUBST([VAPIGEN_VAPIDIR])
+  AC_SUBST([VAPIGEN_MAKEFILE])
+
+  AM_CONDITIONAL(ENABLE_VAPIGEN, test "x$enable_vala" = "xyes")
+])
diff '--exclude=.git' -urN a/tools/Makefile.am b/tools/Makefile.am
--- a/tools/Makefile.am	1969-12-31 19:00:00.000000000 -0500
+++ b/tools/Makefile.am	2018-05-08 19:39:05.742140969 -0400
@@ -0,0 +1,45 @@
+AM_CPPFLAGS =						\
+	$(GLIB_CFLAGS)					\
+	$(GUDEV_CFLAGS)					\
+	$(USB_CFLAGS)					\
+	-DBINDIR=\"$(bindir)\"			 	\
+	-DDATADIR=\"$(datadir)\"			\
+	-DPREFIX=\""$(prefix)"\" 			\
+	-DSYSCONFDIR=\""$(sysconfdir)"\" 		\
+	-DLIBDIR=\""$(libdir)"\" 			\
+	-DVERSION="\"$(VERSION)\"" 			\
+	-DG_LOG_DOMAIN=\"GUsb\"				\
+	-DG_USB_API_IS_SUBJECT_TO_CHANGE		\
+	-I$(top_srcdir)					\
+	-I$(top_builddir)
+
+GUSB_LIBS =						\
+	$(top_builddir)/gusb/libgusb.la
+
+bin_PROGRAMS =						\
+	gusbcmd
+
+gusbcmd_SOURCES =					\
+	gusb-main.c
+
+gusbcmd_LDADD =						\
+	$(USB_LIBS)					\
+	$(GLIB_LIBS)					\
+	$(GUDEV_LIBS)					\
+	$(GUSB_LIBS)
+
+gusbcmd_CFLAGS =					\
+	$(WARNINGFLAGS_C)
+
+clean-local:
+	rm -f *~
+
+CLEANFILES = $(BUILT_SOURCES)
+
+DISTCLEANFILES =
+
+MAINTAINERCLEANFILES =					\
+	*~			      			\
+	Makefile.in
+
+-include $(top_srcdir)/git.mk
